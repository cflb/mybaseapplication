version: "2"

services:
  webapp:
    restart: always
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - "./src:/src"
    env_file:
      - ./src/django.env
    command: gunicorn demo.wsgi:application -w 2 -b :8000
    links:
      - redis

  staticfiles:
    restart: always
    build: ./nginx/
    ports:
      - "80:80"
    volumes:
      - "./src/static:/www/static"
    links:
      - redis
      - webapp:webapp
    environment:
      - PORT_REDIS=6379
      - HOST_REDIS=redis

  ### PostgreSQL Container (Master) ####################################

  master:
    restart: always
    build: ./master
    volumes:
      - master_vol:/var/lib/postgresql
    ports:
      - "5434:5432"
    env_file:
      - ./.master.env

  ### PostgreSQL Container (Slave) ####################################

  slave:
    restart: always
    build: ./slave
    volumes:
      - slave_vol:/var/lib/postgresql
    ports:
      - "5435:5432"
    links:
      - master:master
    env_file:
      - ./.slave.env

  ### pgAdmin Container (Master) #######################################

  pgadmin:
    build: ./pgadmin
    ports:
      - "5051:5051"
    links:
      - master

### Redis Container #######################################

  redis:
    image: redis
    volumes:
      - dados_redis:/data
  
### Volumes Setup ###########################################

volumes:
  master_vol:
    driver: "local"
  slave_vol:
    driver: "local"
  sessions: ## nothing is connected to this (- ./data/sessions:/sessions)
    driver: "local"
  dados_redis:
    driver: "local"
